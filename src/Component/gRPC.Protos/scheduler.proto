syntax = "proto3";

option csharp_namespace = "SchedulerZ.gRPC";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

package Scheduler;

service SchedulerService{
	rpc StartJob(Job) returns(SchedulerResponse);
	rpc PauseJob(Job) returns(SchedulerResponse);
	rpc ResumeJob(Job) returns(SchedulerResponse);
	rpc StopJob(Job) returns(SchedulerResponse);
	rpc RunJobOnceNow(Job) returns(SchedulerResponse);
}

service FileService{
	rpc DownloadFile (FileRequest) returns (stream FileReply);
	rpc UploadFile(stream FileReply) returns(FileResponse);
}

message Job{
	string Id=1;
	string Name=2;
	google.protobuf.StringValue Remark=3;
	bool IsSimple=4;
	google.protobuf.StringValue CronExpression=5;
	int32 RepeatCount=6;
	int64 IntervalSeconds=7;
	string AssemblyName=8;
	string ClassName=9;
	int64 StartTime=10;
	int64 EndTime=11;
	int64 CreateTime=12;
	string FilePath=13;
	google.protobuf.StringValue CustomParamsJson=14;
	int32 Status=15;
	int64 LastRunTime=16;
	int64 NextRunTime=17;
	int32 TotalRunCount=18;
	google.protobuf.StringValue NodeHost=19;
	int32 NodePort=20;
}

message SchedulerResponse{
	bool Success=1;
}


message FileResponse{
    string FileName=1;//文件名
    string Mark = 2;//携带的包
}

//请求下载文件时，所需下载文件的文件名称集合
message FileRequest{
    repeated string FileNames=1;//文件名集合
    string Mark = 2;//携带的包
}

//下载和上传文件时的应答数据
message FileReply{
    string FileName=1;//文件名
    int32 Block = 2;//标记---第几个数据
    bytes Content = 3;//数据
    string Mark = 4;//携带的包
 }